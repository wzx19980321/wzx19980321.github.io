{"version":3,"file":"static/js/735.926b8150.chunk.js","mappings":"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","sources":["unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","unauthenticated-app/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Form, Input } from 'antd'\n\nimport { LongButton } from 'unauthenticated-app'\nimport { useAuth } from 'context/auth-context'\nimport { useAsync } from 'utils/use-async'\n\nexport default function LoginScreen({\n  onError\n}: {\n  onError: (error: Error) => void\n}) {\n  const { login } = useAuth()\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true })\n\n  // HTMLFormElement extends Element\n  const handleSubmit = async (values: {\n    username: string\n    password: string\n  }) => {\n    try {\n      await run(login(values))\n    } catch (err: any) {\n      err.message = '用户名或密码不正确'\n      onError(err)\n    }\n  }\n\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name={'username'}\n        rules={[{ required: true, message: '请输入用户名' }]}\n      >\n        <Input placeholder={'用户名'} type=\"text\" id={'username'} />\n      </Form.Item>\n      <Form.Item\n        name={'password'}\n        rules={[{ required: true, message: '请输入密码' }]}\n      >\n        <Input type={'password'} placeholder={'密码'} id={'password'} />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType=\"submit\" type=\"primary\">\n          登录\n        </LongButton>\n      </Form.Item>\n    </Form>\n  )\n}\n","import React from 'react'\nimport { Form, Input } from 'antd'\n\nimport { LongButton } from 'unauthenticated-app'\n\nimport { useAuth } from 'context/auth-context'\nimport { useAsync } from 'utils/use-async'\n\nexport default function RegisterScreen({\n  onError\n}: {\n  onError: (err: Error) => void\n}) {\n  const { register } = useAuth()\n  const { run, isLoading } = useAsync(undefined, { throwOnError: true })\n\n  const handleSubmit = async ({\n    username,\n    password,\n    cpassword\n  }: {\n    username: string\n    password: string\n    cpassword: string\n  }) => {\n    if (cpassword !== password) {\n      onError(new Error('请确认两次输入的密码相同'))\n      return\n    }\n    try {\n      await run(register({ username, password }))\n    } catch (error: any) {\n      onError(error)\n    }\n  }\n\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name={'username'}\n        rules={[{ required: true, message: '请输入用户名' }]}\n      >\n        <Input placeholder={'用户名'} type=\"text\" id={'username'} />\n      </Form.Item>\n      <Form.Item\n        name={'password'}\n        rules={[{ required: true, message: '请输入密码' }]}\n      >\n        <Input placeholder={'密码'} type={'password'} id={'password'} />\n      </Form.Item>\n      <Form.Item\n        name={'cpassword'}\n        rules={[{ required: true, message: '请输入密码' }]}\n      >\n        <Input placeholder={'确认密码'} type={'password'} id={'cpassword'} />\n      </Form.Item>\n      <Form.Item>\n        <LongButton type={'primary'} htmlType=\"submit\" loading={isLoading}>\n          注册\n        </LongButton>\n      </Form.Item>\n    </Form>\n  )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { Card, Divider, Button } from 'antd'\n\nimport logo from 'assets/logo.svg'\nimport { ErrorBox } from 'components/lib'\nimport { useDocumentTitle } from 'utils'\nimport LoginScreen from 'unauthenticated-app/login'\nimport RegisterScreen from 'unauthenticated-app/register'\n\nexport default function UnauthenticatedApp() {\n  const [isRegister, setIsRegister] = useState<boolean>(false)\n  const [error, setError] = useState<Error | null>(null)\n\n  useDocumentTitle('task-management')\n\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? '请注册' : '请登录'}</Title>\n        <ErrorBox error={error} />\n        {isRegister ? (\n          <RegisterScreen onError={setError} />\n        ) : (\n          <LoginScreen onError={setError} />\n        )}\n        <Divider />\n        <LongButton type={'link'} onClick={() => setIsRegister(!isRegister)}>\n          {isRegister ? '已经有账号了？直接登录' : '没有账号？注册新账号'}\n        </LongButton>\n      </ShadowCard>\n    </Container>\n  )\n}\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  margin-top: 5rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`\n\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  margin-top: 15rem;\n  background-size: 14rem;\n  width: 100%;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`\n"],"names":["LoginScreen","onError","login","useAuth","useAsync","undefined","throwOnError","run","isLoading","handleSubmit","values","message","onFinish","name","rules","required","placeholder","type","id","LongButton","loading","htmlType","RegisterScreen","register","username","password","cpassword","Error","UnauthenticatedApp","useState","isRegister","setIsRegister","error","setError","useDocumentTitle","Container","Header","Background","ShadowCard","Title","onClick","styled","Button","Card","logo"],"sourceRoot":""}