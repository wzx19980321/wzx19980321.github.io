{"version":3,"file":"static/js/213.abaf240c.chunk.js","mappings":"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","sources":["assets/software-logo.svg","utils/user.ts","components/user-popover.tsx","utils/use-optimistic-options.tsx","utils/project.ts","utils/url.ts","screens/project-list/util.ts","components/project-popover.tsx","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","components/pin.tsx","screens/project-list/list.tsx","components/profiler.tsx","screens/project-list/index.tsx","components/task-type-select.tsx","utils/task-type.ts","screens/kanban/util.ts","screens/kanban/search-panel.tsx","screens/kanban/index.tsx","utils/epic.ts","screens/epic/util.ts","screens/epic/crate-epic.tsx","screens/epic/index.tsx","utils/task.ts","screens/project/index.tsx","screens/project-list/project-modal.tsx","authenticated-app.tsx"],"sourcesContent":["var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"97.6553341%\",\n    y1: \"35.6591143%\",\n    x2: \"37.202032%\",\n    y2: \"75.4891864%\",\n    id: \"uid392-1\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"7%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"8.43371138%\",\n    y1: \"60.1495759%\",\n    x2: \"64.1161517%\",\n    y2: \"23.5790285%\",\n    id: \"uid392-2\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"0%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n    fill: \"url(#uid392-1)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n    fill: \"url(#uid392-2)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n    fill: \"inherit\",\n    fillRule: \"evenodd\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.8043cb5be0370148717e6aeab61fa561.svg\";\nexport { ForwardRef as ReactComponent };","import { useHttp } from 'utils/http'\r\nimport { User } from 'types/user'\r\nimport { useQuery } from 'react-query'\r\n\r\nexport const useUsers = (param?: Partial<User>) => {\r\n  const client = useHttp()\r\n\r\n  return useQuery<User[]>(['users', param], () =>\r\n    client('users', { data: param })\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { Typography, List, Divider, Popover } from 'antd'\r\nimport { useUsers } from 'utils/user'\r\n\r\nexport const UserPopover = () => {\r\n  const { data: users, refetch } = useUsers()\r\n\r\n  const content = (\r\n    <ContentContainer>\r\n      <Typography.Text type={'secondary'}>组员列表</Typography.Text>\r\n      <List\r\n        dataSource={users}\r\n        renderItem={(user) => (\r\n          <List.Item key={user.id}>\r\n            <List.Item.Meta title={user.name} />\r\n          </List.Item>\r\n        )}\r\n      />\r\n      <Divider />\r\n    </ContentContainer>\r\n  )\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      placement={'bottom'}\r\n      onVisibleChange={() => refetch()}\r\n    >\r\n      <span>组员</span>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\n  min-width: 30rem;\r\n`\r\n","import { QueryKey, useQueryClient } from 'react-query'\n\nexport const useConfig = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any[]) => any[]\n) => {\n  const queryClient = useQueryClient()\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    async onMutate(target: any) {\n      const previousItems = queryClient.getQueryData(queryKey)\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        return callback(target, old)\n      })\n      return { previousItems }\n    },\n    onError(error: any, newItem: any, context: any) {\n      queryClient.setQueryData(queryKey, context.previousItems)\n    }\n  }\n}\n\nexport const useDeleteConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\n  )\nexport const useEditConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  )\nexport const useAddConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []))\n","import { QueryKey, useMutation, useQuery } from 'react-query'\nimport { Project } from 'types/project'\nimport { useHttp } from 'utils/http'\nimport { cleanObject } from 'utils/index'\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig\n} from './use-optimistic-options'\n\nexport const useProjects = (params?: Partial<Project>) => {\n  const client = useHttp()\n\n  // 当params发生变化时 useQuery重新执行一次\n  return useQuery<Project[]>(['project', cleanObject(params)], () =>\n    client('projects', { data: params })\n  )\n}\n\n// 获取kanban中的后台数据\nexport const useProject = (id?: number) => {\n  const client = useHttp()\n\n  return useQuery<Project>(\n    ['project', { id }],\n    () => client(`projects/${id}`),\n    {\n      enabled: Boolean(id)\n    }\n  )\n}\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp()\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects/${params.id}`, {\n        method: 'PATCH',\n        data: params\n      }),\n    useEditConfig(queryKey)\n  )\n}\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const client = useHttp()\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`projects/${id}`, {\n        method: 'DELETE'\n      }),\n    useDeleteConfig(queryKey)\n  )\n}\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp()\n\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects`, {\n        data: params,\n        method: 'POST'\n      }),\n    useAddConfig(queryKey)\n  )\n}\n","import { URLSearchParamsInit, useSearchParams } from 'react-router-dom'\nimport { useMemo, useState } from 'react'\nimport { cleanObject, subset } from 'utils/index'\n\n// 获取路由的地址参数 和 设置路由地址函数\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\n  const [searchParams] = useSearchParams()\n  const setSearchParams = useSetUrlSearchParam()\n  const [stateKeys] = useState(keys)\n  return [\n    useMemo(() => {\n      return subset(Object.fromEntries(searchParams), stateKeys) as {\n        [key in K]: string\n      }\n    }, [searchParams, stateKeys]),\n    (param: Partial<{ [key in K]: unknown }>) => {\n      return setSearchParams(param)\n    }\n  ] as const\n  // as const 的目的是为了导出一个 固定的对象类型{name :xxx, personId:xxx}\n}\n\n// 返回设置路由参数的函数\nexport const useSetUrlSearchParam = () => {\n  const [searchParams, SetsearchParams] = useSearchParams()\n  return (params: { [key in string]: unknown }) => {\n    const o = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params\n    }) as URLSearchParamsInit\n    return SetsearchParams(o)\n  }\n}\n","import { useMemo } from 'react'\nimport { useProject } from 'utils/project'\nimport { useSetUrlSearchParam, useUrlQueryParam } from 'utils/url'\n\nexport const useProjectModal = () => {\n  // 项目创建\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\n    'projectCreate'\n  ])\n  // 项目编辑\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\n    'editingProjectId'\n  ])\n  const setUrlParams = useSetUrlSearchParam()\n  const { data: editingProject, isLoading } = useProject(\n    Number(editingProjectId)\n  )\n\n  const open = () => setProjectCreate({ projectCreate: true })\n  const close = () => setUrlParams({ projectCreate: '', editingProjectId: '' })\n  const startEdit = (id: number) =>\n    setEditingProjectId({ editingProjectId: id })\n\n  return {\n    projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),\n    open,\n    close,\n    startEdit,\n    editingProject,\n    isLoading\n  }\n}\n\n// 项目列表搜索的参数\nexport const useProjectsSearchParams = () => {\n  const [param, setParam] = useUrlQueryParam(['name', 'personId'])\n  return [\n    useMemo(\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\n      [param]\n    ),\n    setParam\n  ] as const\n}\nexport const useProjectsQueryKey = () => {\n  const [params] = useProjectsSearchParams()\n  return ['project', params]\n}\n","import styled from 'styled-components'\nimport { Typography, List, Divider, Popover } from 'antd'\n\nimport { useProjectModal } from 'screens/project-list/util'\nimport { useProjects } from 'utils/project'\nimport { ButtonNoPadding } from 'components/lib'\n\nexport const ProjectPopover = () => {\n  const { open } = useProjectModal()\n  const { data: projects, refetch } = useProjects()\n  const pinnedProjects = projects?.filter((project) => project.pin)\n\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={'secondary'}>收藏项目</Typography.Text>\n      <List\n        dataSource={pinnedProjects}\n        renderItem={(project) => (\n          <List.Item key={project.id}>\n            <List.Item.Meta title={project.name} />\n          </List.Item>\n        )}\n      />\n      <Divider />\n      <ButtonNoPadding type=\"link\" onClick={open}>\n        新建项目\n      </ButtonNoPadding>\n    </ContentContainer>\n  )\n\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement=\"bottom\"\n      content={content}\n    >\n      <span>项目</span>\n    </Popover>\n  )\n}\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`\n","import React from 'react'\nimport { Select } from 'antd'\nimport { Raw } from 'types'\n\ntype SelectProps = React.ComponentProps<typeof Select>\n\ninterface IdSelectProps\n  extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\n  value?: Raw | null | undefined\n  onChange?: (value?: number) => void\n  defaultOptionName?: string\n  options?: { name: string; id: number }[]\n}\n\n/**\n * value 可以传入多种类型的值\n * onChange只会回调 number|undefined 类型\n * 当 isNaN(Number(value)) 为true的时候，代表选择默认类型\n * 当选择默认类型的时候，onChange会回调undefined\n * @param props\n * @constructor\n */\n// Select组件的封装\nexport const IdSelect = (prop: IdSelectProps) => {\n  const { value, onChange, defaultOptionName, options, ...restProps } = prop\n\n  return (\n    <Select\n      value={options?.length ? toNumber(value) : 0}\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\n      {...restProps}\n    >\n      {defaultOptionName ? (\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\n      ) : null}\n      {options?.map((option) => (\n        <Select.Option key={option.id} value={option.id}>\n          {option.name}\n        </Select.Option>\n      ))}\n    </Select>\n  )\n}\n\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value))\n","import React from 'react'\nimport { useUsers } from 'utils/user'\nimport { IdSelect } from 'components/id-select'\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: users } = useUsers()\n\n  return <IdSelect options={users || []} {...props} />\n}\n","import { Form, Input, Select } from 'antd'\nimport { UserSelect } from 'components/user-select'\nimport { Project } from 'types/project'\nimport { User } from 'types/user'\n\n// import {useEffect, useState} from 'react';\n// export interface User {\n//   id: string\n//   name: string\n//   email: string\n//   title: string\n//   organization: string\n// }\n\ninterface SearchPanelProps {\n  users: User[]\n  param: Partial<Pick<Project, 'name' | 'personId'>>\n  setParam: (param: SearchPanelProps['param']) => void\n}\n\nexport const SearchPanel = ({ users, param, setParam }: SearchPanelProps) => {\n  return (\n    <Form style={{ marginBottom: '2rem' }} layout={'inline'}>\n      <Form.Item>\n        {/* === setParam(Object.assign({, param, {name: evt.target.value}}) */}\n        <Input\n          placeholder={'项目名'}\n          type=\"text\"\n          value={param.name}\n          onChange={(evt) =>\n            setParam({\n              ...param,\n              name: evt.target.value\n            })\n          }\n        />\n      </Form.Item>\n      <Form.Item>\n        <UserSelect\n          defaultOptionName={'负责人'}\n          value={param.personId}\n          onChange={(value) =>\n            setParam({\n              ...param,\n              personId: value\n            })\n          }\n        />\n      </Form.Item>\n    </Form>\n  )\n}\n","import { Rate } from 'antd'\nimport React from 'react'\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean\n  onCheckedChange?: (checked: boolean) => void\n}\n\nexport const Pin = ({ checked, onCheckedChange, ...restPops }: PinProps) => {\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...restPops}\n    />\n  )\n}\n","import { Dropdown, Menu, Modal, Table, TableProps } from 'antd'\nimport { Link } from 'react-router-dom'\nimport dayjs from 'dayjs'\nimport { Project } from 'types/project'\nimport { User } from 'types/user'\nimport { Pin } from 'components/pin'\nimport { useProjectModal, useProjectsQueryKey } from './util'\nimport { useDeleteProject, useEditProject } from 'utils/project'\nimport { ButtonNoPadding } from 'components/lib'\n\n// TODO 把ID改成number类型\n// export interface Project {\n//   id: string\n//   name: string\n//   personId: string\n//   pin: boolean\n//   organization: string\n//   created: number\n// }\n\ninterface ListProps extends TableProps<Project> {\n  users: User[]\n}\nexport const List = ({ users, ...props }: ListProps) => {\n  const { mutate } = useEditProject(useProjectsQueryKey())\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin })\n  return (\n    <Table\n      pagination={false}\n      rowKey={'id'}\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true} />,\n          render(value, project) {\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={pinProject(project.id)}\n              />\n            )\n          }\n        },\n        {\n          title: '名称',\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          render(value, project) {\n            return (\n              <Link to={`projects/${String(project.id)}`}>{project.name}</Link>\n            )\n          }\n        },\n        {\n          title: '部门',\n          dataIndex: 'organization'\n        },\n        {\n          title: '负责人',\n          render(value, project) {\n            return (\n              <span>\n                {users.find((user) => user.id === project.personId)?.name ||\n                  '未知'}\n              </span>\n            )\n          }\n        },\n        {\n          title: '创建时间',\n          render(value, project) {\n            return (\n              <span>\n                {project.created\n                  ? dayjs(project.created).format('YYYY-MM-DD')\n                  : '无'}\n              </span>\n            )\n          }\n        },\n        {\n          render(value, project) {\n            return <More project={project} />\n          }\n        }\n      ]}\n      {...props}\n    />\n  )\n}\n\nconst More = ({ project }: { project: Project }) => {\n  const { startEdit } = useProjectModal()\n  const editProject = (id: number) => () => startEdit(id)\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey())\n  const confirmDeleteProject = (id: number) => {\n    Modal.confirm({\n      title: '确定删除这个项目吗?',\n      content: '点击确定删除',\n      okText: '确定',\n      onOk() {\n        deleteProject({ id })\n      }\n    })\n  }\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item onClick={editProject(project.id)} key={'edit'}>\n            编辑\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => confirmDeleteProject(project.id)}\n            key={'delete'}\n          >\n            删除\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <ButtonNoPadding type={'link'}>更多</ButtonNoPadding>\n    </Dropdown>\n  )\n}\n","import React, { ProfilerOnRenderCallback, ProfilerProps } from 'react'\n\ntype Props = { metadata?: any; phases?: ('mount' | 'update')[] } & Omit<\n  ProfilerProps,\n  'onRender'\n>\n\n// 记录看板页面下所有组件渲染的效率\nlet queue: unknown[] = []\n\nconst sendProfileQueue = () => {\n  if (!queue.length) {\n    return\n  }\n  const queueToSend = [...queue]\n  queue = []\n  console.log(queueToSend)\n}\n\nsetInterval(sendProfileQueue, 5000)\n\n// 用于测量一个 React 应用多久渲染一次以及渲染一次的“代价”\nexport const Profiler = ({ metadata, phases, ...props }: Props) => {\n  const reportProfile: ProfilerOnRenderCallback = (\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions\n  ) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions,\n        metadata\n      })\n    }\n  }\n  return <React.Profiler onRender={reportProfile} {...props} />\n}\n","import { SearchPanel } from './search-panel'\nimport { List } from './list'\nimport { useDebounce, useDocumentTitle } from 'utils'\nimport styled from 'styled-components'\nimport { useProjects } from 'utils/project'\nimport { useUsers } from 'utils/user'\nimport { useProjectModal, useProjectsSearchParams } from './util'\nimport { ButtonNoPadding, ErrorBox, Row } from 'components/lib'\nimport { Profiler } from 'components/profiler'\n\nexport const ProjectListScreen = () => {\n  useDocumentTitle('项目列表', false)\n  // const [users, setUsers] = useState([])\n  const [param, setParam] = useProjectsSearchParams()\n  const { open } = useProjectModal()\n  const debouncedParam = useDebounce(param, 2000)\n  // const [isLoading, setIsLoading] = useState(false)\n  // const [error, setError] = useState<null | Error>(null)\n  // const [list, setList] = useState([])\n\n  // 使用useProjects获取异步操作的状态\n  const { isLoading, error, data: list } = useProjects(debouncedParam)\n  const { data: users } = useUsers()\n\n  // useEffect(() => {\n  //   run(client('projects', { data: cleanObject(debouncedParam) }))\n  // setIsLoading(true)\n  // client('projects', { data: cleanObject(debouncedParam) }).then(setList)\n  //   .catch(error => {\n  //     setList([])\n  //     setError(error)\n  //   })\n  //   .finally(() => setIsLoading(false))\n  // fetch(\n  //   `${apiUrl}/projects?${qs.stringify(cleanObject(debouncedParam))}`\n  // ).then(async (response) => {\n  //   if (response.ok) {\n  //     setList(await response.json())\n  //   }\n  // })\n  // }, [debouncedParam])\n\n  // useMount(() => {\n  //   client('users').then(setUsers)\n  // fetch(`${apiUrl}/users`).then(async (response) => {\n  //   if (response.ok) {\n  //     setUsers(await response.json())\n  //   }\n  // })\n  // })\n\n  return (\n    <Profiler id={'项目列表'}>\n      <ScreenContainer>\n        <Row marginBottom={2} between={true}>\n          <h1>项目列表</h1>\n          <ButtonNoPadding onClick={open} type={'link'}>\n            新建项目\n          </ButtonNoPadding>\n        </Row>\n        <SearchPanel users={users || []} param={param} setParam={setParam} />\n        <ErrorBox error={error} />\n        <List loading={isLoading} users={users || []} dataSource={list || []} />\n      </ScreenContainer>\n    </Profiler>\n  )\n}\n\n// 阻止在已卸载组件上赋值\nProjectListScreen.whyDidYouRender = false\n\nconst ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n","import React from 'react'\nimport { IdSelect } from 'components/id-select'\nimport { useTaskTypes } from 'utils/task-type'\n\nexport const TaskTypeSelect = (\n  props: React.ComponentProps<typeof IdSelect>\n) => {\n  const { data: taskTypes } = useTaskTypes()\n  return <IdSelect {...props} options={taskTypes || []} />\n}\n","import { useQuery } from 'react-query'\nimport { useHttp } from 'utils/http'\nimport { TaskType } from 'types/task-type'\n\nexport const useTaskTypes = () => {\n  const client = useHttp()\n\n  return useQuery<TaskType[]>(['taskTypes'], () => client('taskTypes'))\n}\n","import { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useProject } from 'utils/project'\nimport { useUrlQueryParam } from 'utils/url'\n\n// 获取当前路由对应的id\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation()\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1]\n  return Number(id)\n}\n\n// 获取对应路由中参数的值和id\nexport const useTasksSearchParams = () => {\n  const [param] = useUrlQueryParam(['name', 'typeId', 'processorId', 'tagId'])\n  const projectId = useProjectIdInUrl()\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(param.typeId) || undefined,\n      processorId: Number(param.processorId) || undefined,\n      tagId: Number(param.tagId) || undefined,\n      name: param.name\n    }),\n    [param, projectId]\n  )\n}\n\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl())\n","import { useEffect, useState } from 'react'\nimport { Input, Button } from 'antd'\nimport { Row } from 'components/lib'\nimport { UserSelect } from 'components/user-select'\nimport { TaskTypeSelect } from 'components/task-type-select'\n\n// 逻辑实现\nimport { useTasksSearchParams } from 'screens/kanban/util'\nimport { useSetUrlSearchParam } from 'utils/url'\nimport { useDebounce } from 'utils'\n\nexport const SearchPanel = () => {\n  const searchParams = useTasksSearchParams()\n  const setSearchParams = useSetUrlSearchParam()\n  const [param, setParam] = useState({ name: '' })\n\n  const debouncedParam = useDebounce(param) // 节流\n  useEffect(() => {\n    setSearchParams(param)\n  }, [debouncedParam])\n\n  const reset = () => {\n    setSearchParams({\n      name: undefined,\n      processorId: undefined,\n      tagId: undefined,\n      typeId: undefined\n    })\n  }\n\n  return (\n    <Row marginBottom={4} gap={true}>\n      <Input\n        style={{ width: '20rem' }}\n        placeholder={'任务名'}\n        onChange={(e) => setParam({ name: e.target.value })}\n      />\n      <UserSelect\n        defaultOptionName={'经办人'}\n        value={searchParams?.processorId}\n        onChange={(value) => setSearchParams({ processorId: value })}\n      />\n      <TaskTypeSelect\n        defaultOptionName={'类型'}\n        value={searchParams.typeId}\n        onChange={(value) => setSearchParams({ typeId: value })}\n      />\n      <Button onClick={reset}>清除筛选器</Button>\n    </Row>\n  )\n}\n","import React from 'react'\nimport { useDocumentTitle } from 'utils'\n\nimport { Profiler } from 'components/profiler'\nimport { ScreenContainer } from 'components/lib'\nimport { SearchPanel } from 'screens/kanban/search-panel'\n\nimport { useProjectInUrl } from 'screens/kanban/util'\n\nexport function KanbanScreen() {\n  useDocumentTitle('看板列表')\n\n  const { data: currentProject } = useProjectInUrl()\n\n  return (\n    <Profiler id={'看板页面'}>\n      <ScreenContainer>\n        <h1>{currentProject?.name}看板</h1>\n        <SearchPanel />\n      </ScreenContainer>\n    </Profiler>\n  )\n}\n","import { QueryKey, useMutation, useQuery } from 'react-query'\r\nimport { Epic } from 'types/epic'\r\nimport { useHttp } from './http'\r\nimport { useAddConfig, useDeleteConfig } from './use-optimistic-options'\r\n\r\nexport const useEpics = (param?: Partial<Epic>) => {\r\n  const client = useHttp()\r\n  return useQuery<Epic[]>(['epics', param], () =>\r\n    client('epics', { data: param })\r\n  )\r\n}\r\n\r\nexport const useAddEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n\r\n  return useMutation(\r\n    (params: Partial<Epic>) =>\r\n      client(`epics`, {\r\n        data: params,\r\n        method: 'POST'\r\n      }),\r\n    useAddConfig(queryKey)\r\n  )\r\n}\r\n\r\nexport const useDeleteEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp()\r\n\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`epics/${id}`, {\r\n        method: 'DELETE'\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  )\r\n}\r\n","import { useProjectIdInUrl } from 'screens/kanban/util'\r\n\r\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() })\r\n\r\nexport const useEpicsQueryKey = () => ['epics', useEpicSearchParams()]\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Drawer, Form, Input, Spin } from 'antd'\r\nimport { DrawerProps } from 'antd/es/drawer'\r\nimport { useAddEpic } from 'utils/epic'\r\nimport { useEpicsQueryKey } from './util'\r\nimport { useProjectIdInUrl } from 'screens/kanban/util'\r\nimport { ErrorBox } from 'components/lib'\r\nimport styled from 'styled-components'\r\n\r\nexport const CreateEpic = (\r\n  props: Pick<DrawerProps, 'visible'> & { onClose: () => void }\r\n) => {\r\n  const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQueryKey())\r\n  const [form] = Form.useForm()\r\n  const projectId = useProjectIdInUrl()\r\n\r\n  const onFinish = async (values: any) => {\r\n    await addEpic({ ...values, projectId })\r\n    props.onClose()\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form, props.visible])\r\n\r\n  return (\r\n    <Drawer\r\n      visible={props.visible}\r\n      onClose={props.onClose}\r\n      forceRender={true}\r\n      destroyOnClose={true}\r\n      width={'100%'}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={'large'} />\r\n        ) : (\r\n          <>\r\n            <h1>创建任务组</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={'vertical'}\r\n              style={{ width: '30rem' }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={'名称'}\r\n                name={'name'}\r\n                rules={[{ required: true, message: '请输入任务组名' }]}\r\n              >\r\n                <Input placeholder={'请输入任务组名称'} />\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: 'right' }}>\r\n                <Button\r\n                  loading={isLoading}\r\n                  type={'primary'}\r\n                  htmlType={'submit'}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n","import { Button, List, Modal } from 'antd'\r\nimport { Row, ScreenContainer } from 'components/lib'\r\nimport dayjs from 'dayjs'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useProjectInUrl } from 'screens/kanban/util'\r\nimport styled from 'styled-components'\r\nimport { Epic } from 'types/epic'\r\nimport { useDeleteEpic, useEpics } from 'utils/epic'\r\nimport { useTasks } from 'utils/task'\r\nimport { CreateEpic } from './crate-epic'\r\nimport { useEpicSearchParams, useEpicsQueryKey } from './util'\r\n\r\nexport const EpicScreen = () => {\r\n  const { data: currentProject } = useProjectInUrl()\r\n  const { data: epics } = useEpics(useEpicSearchParams())\r\n  const { data: tasks } = useTasks({ projectId: currentProject?.id })\r\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey())\r\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false)\r\n\r\n  const confirmDeleteEpic = (epic: Epic) => {\r\n    Modal.confirm({\r\n      title: `确定删除项目组：${epic.name}`,\r\n      content: '点击确定删除',\r\n      okText: '确定',\r\n      onOk() {\r\n        deleteEpic({ id: epic.id })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ScreenContainer>\r\n        <Row between={true}>\r\n          <h1>{currentProject?.name}任务组</h1>\r\n          <Button onClick={() => setEpicCreateOpen(true)} type={'link'}>\r\n            创建任务组\r\n          </Button>\r\n        </Row>\r\n        <List\r\n          style={\r\n            {\r\n              // overflow: 'scroll'\r\n            }\r\n          }\r\n          dataSource={epics}\r\n          itemLayout={'vertical'}\r\n          renderItem={(epic) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title={\r\n                  <Row between={true}>\r\n                    <span>{epic.name}</span>\r\n                    <Button\r\n                      onClick={() => confirmDeleteEpic(epic)}\r\n                      type={'link'}\r\n                    >\r\n                      删除\r\n                    </Button>\r\n                  </Row>\r\n                }\r\n                description={\r\n                  <div>\r\n                    <div>\r\n                      开始时间：{dayjs(epic.start).format('YYYY-MM-DD')}\r\n                    </div>\r\n                    <div>结束时间：{dayjs(epic.end).format('YYYY-MM-DD')}</div>\r\n                  </div>\r\n                }\r\n              />\r\n              <div>\r\n                {tasks\r\n                  ?.filter((task) => task.epicId === epic.id)\r\n                  .map((task) => (\r\n                    <Link\r\n                      to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\r\n                      key={task.id}\r\n                    >\r\n                      {task.name}\r\n                    </Link>\r\n                  ))}\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n        <CreateEpic\r\n          onClose={() => setEpicCreateOpen(false)}\r\n          visible={epicCreateOpen}\r\n        />\r\n      </ScreenContainer>\r\n    </>\r\n  )\r\n}\r\n","import { useQuery } from 'react-query'\r\nimport { Task } from 'types/task'\r\nimport { useHttp } from './http'\r\n\r\nexport const useTasks = (params?: Partial<Task>) => {\r\n  const client = useHttp()\r\n  return useQuery<Task[]>(['tasks', params], () =>\r\n    client('tasks', { data: params })\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Route, Routes, useLocation } from 'react-router'\r\n// 侧边栏部分\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu } from 'antd'\r\n// 主体部分\r\nimport { KanbanScreen } from 'screens/kanban'\r\nimport { EpicScreen } from 'screens/epic'\r\nimport { MenuProps } from 'antd/node_modules/rc-menu'\r\n\r\n//获取当前地址的最后一个值  /kanban  /epic\r\nconst useRouteType = () => {\r\n  const utils = useLocation().pathname.split('/')\r\n  // 将默认地址变为kanban\r\n  // if (\r\n  //   utils[utils.length - 1] !== 'kanban' ||\r\n  //   utils[utils.length - 1] !== 'epic'\r\n  // )\r\n  //   return 'kanban'\r\n  if (!['kanban', 'epic'].includes(utils[utils.length - 1])) {\r\n    return 'kanban'\r\n  }\r\n  return utils[utils.length - 1]\r\n}\r\n\r\nexport function ProjectScreen() {\r\n  const routeType = useRouteType()\r\n  // const [curMenu, setCurMenu] = useState('kanban')\r\n  // const selectMenu = (evt: MenuInfoProps) => {\r\n  //   // setCurMenu()\r\n  //   console.log(evt.activeKey);\r\n\r\n  // }\r\n  return (\r\n    <Container>\r\n      <Aside>\r\n        <Menu mode={'inline'} selectedKeys={[routeType]}>\r\n          <Menu.Item key={'kanban'}>\r\n            <Link to={'kanban'}>看板</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={'epic'}>\r\n            <Link to={'epic'}>任务组</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Aside>\r\n      <Main>\r\n        <Routes>\r\n          <Route path={'kanban'} element={<KanbanScreen />} />\r\n          <Route path={'epic'} element={<EpicScreen />} />\r\n          <Route index element={<KanbanScreen />} />\r\n        </Routes>\r\n      </Main>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 16rem 1fr;\r\n  width: 100%;\r\n`\r\nconst Aside = styled.aside`\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n`\r\n\r\nconst Main = styled.div`\r\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  overflow: hidden;\r\n`\r\n","import React, { useEffect } from 'react'\nimport { Button, Drawer, Form, Input, Spin } from 'antd'\nimport { useProjectModal, useProjectsQueryKey } from 'screens/project-list/util'\nimport { UserSelect } from 'components/user-select'\nimport { useAddProject, useEditProject } from 'utils/project'\nimport { ErrorBox } from 'components/lib'\nimport styled from 'styled-components'\n\nexport const ProjectModal = () => {\n  const { projectModalOpen, close, editingProject, isLoading } =\n    useProjectModal()\n  const useMutateProject = editingProject ? useEditProject : useAddProject\n\n  const {\n    mutateAsync,\n    error,\n    isLoading: mutateLoading\n  } = useMutateProject(useProjectsQueryKey())\n  const [form] = Form.useForm()\n  const onFinish = (values: any) => {\n    mutateAsync({ ...editingProject, ...values }).then(() => {\n      form.resetFields()\n      close()\n    })\n  }\n  const closeModal = () => {\n    form.resetFields()\n    close()\n  }\n\n  const title = editingProject ? '编辑项目' : '创建项目'\n\n  useEffect(() => {\n    form.setFieldsValue(editingProject)\n  }, [editingProject, form])\n\n  return (\n    <Drawer\n      forceRender={true}\n      onClose={closeModal}\n      visible={projectModalOpen}\n      width={'100%'}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={'large'} />\n        ) : (\n          <>\n            <h1>{title}</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={'vertical'}\n              style={{ width: '40rem' }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={'名称'}\n                name={'name'}\n                rules={[{ required: true, message: '请输入项目名' }]}\n              >\n                <Input placeholder={'请输入项目名称'} />\n              </Form.Item>\n\n              <Form.Item\n                label={'部门'}\n                name={'organization'}\n                rules={[{ required: true, message: '请输入部门名' }]}\n              >\n                <Input placeholder={'请输入部门名'} />\n              </Form.Item>\n\n              <Form.Item label={'负责人'} name={'personId'}>\n                <UserSelect defaultOptionName={'负责人'} />\n              </Form.Item>\n\n              <Form.Item style={{ textAlign: 'right' }}>\n                <Button\n                  loading={mutateLoading}\n                  type={'primary'}\n                  htmlType={'submit'}\n                >\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </Container>\n    </Drawer>\n  )\n}\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","import styled from 'styled-components'\nimport { Route, Routes } from 'react-router'\nimport { Dropdown, Button, Menu } from 'antd'\n// 头部模块\nimport { Row, ButtonNoPadding } from 'components/lib'\nimport { ReactComponent as SoftwareLogo } from 'assets/software-logo.svg'\nimport { resetRoute } from 'utils'\nimport { UserPopover } from 'components/user-popover'\nimport { useAuth } from 'context/auth-context'\nimport { ProjectPopover } from 'components/project-popover'\n// 路由跳转内容\nimport { ProjectListScreen } from 'screens/project-list'\nimport { ProjectScreen } from 'screens/project'\nimport { ProjectModal } from 'screens/project-list/project-modal'\n\nexport default function AuthenticatedApp() {\n  return (\n    <Container>\n      <PageHeader />\n      <Main>\n        <Routes>\n          <Route path={'/projects'} element={<ProjectListScreen />} />\n          <Route path={'/projects/:projectId/*'} element={<ProjectScreen />} />\n          <Route index element={<ProjectListScreen />} />\n        </Routes>\n      </Main>\n      <ProjectModal />\n    </Container>\n  )\n}\n\nconst PageHeader = () => {\n  return (\n    <Header between={true}>\n      <HeaderLeft gap={true}>\n        <ButtonNoPadding type={'link'} onClick={resetRoute}>\n          <SoftwareLogo\n            width={'18rem'}\n            color={'rgb(38, 132, 255)'}\n          ></SoftwareLogo>\n        </ButtonNoPadding>\n        <ProjectPopover />\n        <UserPopover />\n      </HeaderLeft>\n      <HeaderRight>\n        <User />\n      </HeaderRight>\n    </Header>\n  )\n}\n\nconst User = () => {\n  const { user, logout } = useAuth()\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item key={'logout'}>\n            <Button onClick={logout} type={'link'}>\n              登出\n            </Button>\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <Button type=\"link\" onClick={(e) => e.preventDefault()}>\n        Hi,{user?.name}\n      </Button>\n    </Dropdown>\n  )\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 6rem 1fr; // 6rem;\n  /* grid-template-columns: 20rem 1fr 20rem;\n  grid-template-areas:\n    'header header header'\n    'nav main aside'\n    'footer footer footer'; */\n  height: 100vh;\n  /* grid-gap: 10rem; */\n`\nconst Header = styled(Row)`\n  padding: 3.2rem;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n  z-index: 1;\n`\nconst HeaderLeft = styled(Row)`\n  /* display: flex;\n  align-items: center; */\n`\nconst HeaderRight = styled.div``\nconst Main = styled.main`\n  /* display: flex; */\n  overflow: hidden;\n  /* grid-area: main; */\n  /* height: calc(100vh - 6rem); */\n`\n"],"names":["_defs","_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSoftwareLogo","_ref","svgRef","title","titleId","props","viewBox","xmlns","focusable","className","ref","id","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","ForwardRef","useUsers","param","client","useHttp","useQuery","data","UserPopover","users","refetch","content","ContentContainer","type","dataSource","renderItem","user","name","placement","onVisibleChange","styled","useConfig","queryKey","callback","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","onError","error","newItem","context","useDeleteConfig","filter","item","useAddConfig","useProjects","params","cleanObject","useProject","enabled","Boolean","useEditProject","useMutation","method","map","useEditConfig","useAddProject","useUrlQueryParam","useSearchParams","searchParams","setSearchParams","useSetUrlSearchParam","useState","stateKeys","useMemo","subset","fromEntries","SetsearchParams","o","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","setUrlParams","Number","editingProject","isLoading","projectModalOpen","open","close","startEdit","useProjectsSearchParams","setParam","personId","undefined","useProjectsQueryKey","ProjectPopover","projects","pinnedProjects","project","pin","onClick","IdSelect","prop","value","onChange","defaultOptionName","options","restProps","toNumber","option","isNaN","UserSelect","SearchPanel","style","marginBottom","layout","placeholder","evt","Pin","checked","onCheckedChange","restPops","count","num","List","mutate","pagination","rowKey","columns","disabled","render","sorter","a","b","localeCompare","to","String","dataIndex","find","created","dayjs","format","More","useDeleteProject","deleteProject","overlay","Modal","okText","onOk","confirmDeleteProject","queue","setInterval","queueToSend","console","log","Profiler","metadata","phases","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","includes","push","ProjectListScreen","useDocumentTitle","debouncedParam","useDebounce","list","ScreenContainer","between","loading","whyDidYouRender","TaskTypeSelect","taskTypes","useTaskTypes","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","projectId","typeId","processorId","tagId","useTasksSearchParams","useEffect","gap","width","e","KanbanScreen","currentProject","useEpicSearchParams","useEpicsQueryKey","CreateEpic","useAddEpic","addEpic","Form","form","onFinish","values","onClose","resetFields","visible","forceRender","destroyOnClose","Container","size","label","rules","required","message","textAlign","htmlType","EpicScreen","epics","useEpics","tasks","useTasks","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","itemLayout","epic","confirmDeleteEpic","description","start","end","task","epicId","ProjectScreen","routeType","utils","split","useRouteType","Aside","mode","selectedKeys","Main","path","element","index","ProjectModal","mutateAsync","mutateLoading","setFieldsValue","then","AuthenticatedApp","PageHeader","Header","HeaderLeft","resetRoute","color","HeaderRight","User","useAuth","logout","preventDefault","Row"],"sourceRoot":""}